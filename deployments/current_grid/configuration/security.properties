# The first part of this file deals with security issues that clients
# typically face	

# Property that determines the key-length for transient client-side tool
# X.509 identities (used for message-level signing, holder-of-key 
# delegation of credentials, etc.)
edu.virginia.vcgr.genii.client.security.message.rsa-key-length=1024

# Property that sets the minimum configuration for outgoing and 
# response message-level security.  Acceptable values are 
#	"NONE" : The client does not require a minimum configuration 
#		message-level communication.  (The client will auto-upgrade
#		to the level of message-level security required by the 
#		remote container.)
#	"SIGN" : Provides (for outgoing messages) and requires (for 
#		response messages) proof of data integrity. (The client will
#		often auto-upgrade as needed to this configuration to accomodate 
#		AuthZ within certain containers.)
#	"ENCRYPT" : Provides (for outgoing messages) and requires (for 
#		response messages) confidentiality.  (When set, this value
#		necessitates proper resource AuthN, which requires that the 
#	  edu.virginia.vcgr.genii.client.security.resource-identity.authn-tolerance
#		property below be set to "FAIL".)
#	"WARN" : Allows the client to communicate with resources that cannot 
#		be authenticated -->
#
# dgm4d: no longer need SIGN since we do holder-of-key through SSL 
#edu.virginia.vcgr.genii.client.security.message.min-config=SIGN|WARN
edu.virginia.vcgr.genii.client.security.message.min-config=WARN
	
# Resource identity properties section.  This section contains properties
# that indicate what trust store to use for verification of resource 
# identity 
edu.virginia.vcgr.genii.client.security.resource-identity.trust-store-location=trusted.pfx
edu.virginia.vcgr.genii.client.security.resource-identity.trust-store-type=PKCS12
edu.virginia.vcgr.genii.client.security.resource-identity.trust-store-password=trusted

# Directory of certificates that can be used to create a trust-store that will
# authenticate additional resource certificates. These certificates are used in 
# conjunction with the trust-store-location configuration above.
edu.virginia.vcgr.genii.client.security.resource-identity.trusted-certificates.location=trusted-certificates
	
# SSL properties section.  Presently contains properties that identify the 
# trust-store that should be used to authenticate server SSL certificates.
edu.virginia.vcgr.genii.client.security.ssl.trust-store-location=trusted.pfx
edu.virginia.vcgr.genii.client.security.ssl.trust-store-type=PKCS12
edu.virginia.vcgr.genii.client.security.ssl.trust-store-password=trusted

# Directory of certificates that can be used to create a trust-store that will
# authenticate server SSL certificates. These certificates can also be used in 
# conjunction with the trust-store-location configuration above.
edu.virginia.vcgr.genii.client.security.ssl.trusted-certificates.location=trusted-certificates

# Addition to trust store that supports automatic update of TLS certificates.
# Supported in activity 149 as automatically updated CRL repository.
# If this is an absolute path, then that indicates certificates are kept
# updated on host instead, e.g. in /etc/grid-security/certificates folder.
edu.virginia.vcgr.genii.client.security.ssl.grid-certificates.location=grid-certificates
#edu.virginia.vcgr.genii.client.security.ssl.grid-certificates.location=/etc/grid-security/certificates

# Location where MyProxy CA certificates are stored.
edu.virginia.vcgr.genii.client.security.ssl.myproxy-certificates.location=myproxy-certs
#edu.virginia.vcgr.genii.client.security.ssl.myproxy-certificates.location=/etc/grid-security/certificates

# The next part of this file deals with security issues that servers
# typically deal with.

# Resource identity properties section.  This section contains properties
# relevant to the generation of resource identities to be used for AuthN
# of resources to clients.
edu.virginia.vcgr.genii.container.security.resource-identity.use-ogsa-eap=true

# The following four properties are used for specifying which CA 
# certificate/keypair to use for generating resource identity 
# certificates
edu.virginia.vcgr.genii.container.security.resource-identity.key-store=signing-cert.pfx
edu.virginia.vcgr.genii.container.security.resource-identity.key-store-type=PKCS12
edu.virginia.vcgr.genii.container.security.resource-identity.key-password=signer
edu.virginia.vcgr.genii.container.security.resource-identity.key-store-password=signer
edu.virginia.vcgr.genii.container.security.resource-identity.container-alias=signing-cert

# Default to 100 year
edu.virginia.vcgr.genii.container.security.resource-identity.default-certificate-lifetime=3153600000000

# SSL properties section.  Presently contains properties that identify the 
# certificate and keypair that the container should use for incoming SSL 
# connections.  This section does not need to be present if SSL is not being
# used
edu.virginia.vcgr.genii.container.security.ssl.key-store=tls-cert.pfx
edu.virginia.vcgr.genii.container.security.ssl.key-store-type=PKCS12
edu.virginia.vcgr.genii.container.security.ssl.key-password=tilly
edu.virginia.vcgr.genii.container.security.ssl.key-store-password=tilly

# Kerberos realm settings.
#
# Each realm must have an authorized service principal stored in a keytab file
# in order to fully authenticate and authorize users with the Kerberos
# back-end.  This must be done once for every GFFS container that will serve
# as a Kerberos STS.  It does not need to be done per user!  Further, if the
# keytab is missing, there will be complaints in the log regarding insecure
# authentication.  However, full authorization to the service principal is
# mandatory for the realm TERAGRID.ORG due to administrative requirements.
# The Kerberos realm administrator must set up a service principal for you,
# and provide you with a keytab file for that principal before you will be
# able to securely authenticate users with Kerberos.  It is insecure and not
# at all good to run an STS without a proper keytab and service principal.
#
# In the keytab entry below, the realm name should be appended to the keytab
# prefix to provide the proper keytab file for that realm.  The keytab file
# will be sought in the "security" folder next to this "configuration" folder
# in the same deployment.
# In the principal entry below, the realm name should be appended to the
# principal prefix to set the service principal that the STS should authorize
# against.
#
# An example configuration for the kerberos realm TERAGRID.ORG looks like:
#
#   gffs-sts.kerberos.keytab.TERAGRID.ORG=teragrid-flugelheimhost-keytab
#   gffs-sts.kerberos.principal.TERAGRID.ORG=gffs-sts/FLUGELHEIM.ORG@TERAGRID.ORG
#
# In general, the service principal name could be any string, but it is
# recommended that it include the phrase "gffs-sts" at the front to
# distinguish it from other types of service principals.

#only for fred branch!
#gffs-sts.kerberos.keytab.TERAGRID.ORG=KHANDROMA.CS.VIRGINIA.EDU@TERAGRID.ORG.gffs-sts.keytab
#gffs-sts.kerberos.principal.TERAGRID.ORG=gffs-sts/KHANDROMA.CS.VIRGINIA.EDU@TERAGRID.ORG
